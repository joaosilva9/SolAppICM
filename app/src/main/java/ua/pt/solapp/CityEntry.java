/*
 * Copyright (C) 2017 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package ua.pt.solapp;

import android.arch.persistence.room.Entity;
import android.arch.persistence.room.Ignore;
import android.arch.persistence.room.Index;
import android.arch.persistence.room.PrimaryKey;
import android.arch.persistence.room.Room;

import com.google.gson.annotations.Expose;
import com.google.gson.annotations.SerializedName;

/**
 * Defines the schema of a table in {@link Room} for a single weather
 * forecast. The date is used as an {@link Index} so that its uniqueness can be ensured. Indexes
 * also allow for fast lookup for the column.
 */
@Entity(tableName = "city", indices = {@Index(value = {"globalIdLocal"}, unique = true)})
public class CityEntry {

    /**
     * Makes sure the id is the primary key (ensures uniqueness), is auto generated by {@link Room}.
     */
    @PrimaryKey(autoGenerate = true)
    private int id;

    @SerializedName("globalIdLocal")
    @Expose
    private int globalIdLocal;

    @SerializedName("latitude")
    @Expose
    private String latitude;

    @SerializedName("local")
    @Expose
    private String local;

    @SerializedName("longitude")
    @Expose
    private String longitude;

    /**
     * This constructor is used by OpenCityJsonParser. When the network fetch has JSON data, it
     * converts this data to CityEntry objects using this constructor.
     */
    @Ignore
    public CityEntry(int globalIdLocal, String latitude, String local, String longitude) {
        this.globalIdLocal = globalIdLocal;
        this.latitude = latitude;
        this.local = local;
        this.longitude = longitude;
    }

    public CityEntry(int id, int globalIdLocal, String latitude, String local, String longitude) {
        this.id = id;
        this.globalIdLocal = globalIdLocal;
        this.latitude = latitude;
        this.local = local;
        this.longitude = longitude;
    }

    public void setId(int id) {
        this.id = id;
    }

    public int getId() {
        return id;
    }

    public int getGlobalIdLocal() {
        return globalIdLocal;
    }

    public String getLatitude() {
        return latitude;
    }

    public String getLocal() {
        return local;
    }

    public String getLongitude() {
        return longitude;
    }
}
